<?xml version="1.0"?>
<robot name="turtlebot5" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:include filename="$(find turtlebot5)/urdf/inertial_macros.xacro" />
    <xacro:include filename="$(find turtlebot5)/urdf/turtlebot5.gazebo.xarco" />
    <!-- Init colour -->  
        <material name="black">
            <color rgba="0.0 0.0 0.0 1.0"/>
        </material>

        <material name="dark">
            <color rgba="0.3 0.3 0.3 1.0"/>
        </material>
        <material name="light_black">
            <color rgba="0.4 0.4 0.4 1.0"/>
        </material>

        <material name="blue">
            <color rgba="0.0 0.0 0.8 1.0"/>
        </material>

        <material name="green">
            <color rgba="0.0 0.8 0.0 1.0"/>
        </material>

        <material name="grey">
            <color rgba="0.5 0.5 0.5 1.0"/>
        </material>

        <material name="orange">
            <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
        </material>

        <material name="brown">
            <color rgba="${222/255} ${207/255} ${195/255} 1.0"/>
        </material>

        <material name="red">
            <color rgba="0.8 0.0 0.0 1.0"/>
        </material>

        <material name="white">
            <color rgba="1.0 1.0 1.0 1.0"/>
        </material>
    
        <xacro:property name="r200_cam_rgb_px" value="0.005"/>
        <xacro:property name="r200_cam_rgb_py" value="0.018"/>
        <xacro:property name="r200_cam_rgb_pz" value="0.013"/>
        <xacro:property name="r200_cam_depth_offset" value="0.01"/>
    
    <link name="base_footprint"/>

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>
    
    <link name='base_link'>
        <visual>
            <origin xyz="0 0 0.095" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://turtlebot5/meshes/body.stl"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <origin xyz="0 0 0.095" rpy="0 0 0"/>
            <geometry>
                <box size="0.35 0.25 0.089"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.035475" x="0.35" y="0.25" z="0.15">
            <origin xyz="0 0 0.095" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <joint name="inner_piston_joint" type="prismatic">
        <parent link="base_link"/>
        <child link="inner_piston"/>
        <origin xyz="0 0 0.015" rpy="0 0 0"/>
        <axis xyz="0 0 1"/>
         <limit lower="0.0" upper="0.12" effort="100.0" velocity="0.5"/> <!-- Limits and properties -->
    </joint>
    <link name="inner_piston">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
               <mesh filename="package://turtlebot5/meshes/inner.stl"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0.07" rpy="0 0 0"/>
            <geometry>
                <cylinder length="0.14" radius="0.035"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.005010" length="0.14" radius="0.035">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="plateform_joint" type="fixed">
        <parent link="inner_piston"/>
        <child link="plateform_link"/>
        <origin xyz="0 0 0.15" rpy="0 0 0"/>
    </joint>
    <link name="plateform_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://turtlebot5/meshes/plateform.stl"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.27 0.17 0.02"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.007101" x="0.27" y="0.17" z="0.02">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <joint name="wheel_left_joint" type="continuous">
        <parent link="base_link"/>
        <child link="wheel_left_link"/>
        <origin xyz="0 0.1131 0.0346" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
    </joint>
    <link name="wheel_left_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://turtlebot5/meshes/wheelR.stl"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <geometry>
                <cylinder length="0.04" radius="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.001575" length="0.04" radius="0.04">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="wheel_right_joint" type="continuous">
        <parent link="base_link"/>
        <child link="wheel_right_link"/>
        <origin xyz="0 -0.1131 0.0346" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
    </joint>
    <link name="wheel_right_link">
        <visual>
            <geometry>
               <mesh filename="package://turtlebot5/meshes/wheelL.stl"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <geometry>
                <cylinder length="0.04" radius="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.001575" length="0.04" radius="0.04">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="caster_back_right_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_back_right_link"/>
        <origin xyz="-0.177 -0.064 0.012" rpy="-1.57 0 0"/>
    </joint>
    <link name="caster_back_right_link">
        <collision>
        <origin xyz="0 0.001 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.030 0.009 0.020"/>
        </geometry>
        </collision>

        <xacro:inertial_box mass="0.005" x="0.030" y="0.009" z="0.020">
            <origin xyz="0 0.001 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <joint name="caster_back_left_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_back_left_link"/>
        <origin xyz="-0.177 0.064 0.012" rpy="-1.57 0 0"/>
    </joint>
    <link name="caster_back_left_link">
        <collision>
            <origin xyz="0 0.001 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.030 0.009 0.020"/>
            </geometry>
        </collision>

        <xacro:inertial_box mass="0.005" x="0.030" y="0.009" z="0.020">
            <origin xyz="0 0.001 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <joint name="camera_joint" type="fixed">
        <origin xyz="0.179 0 0.15" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="camera_link"/>
    </joint>   
    <link name="camera_link">
        <visual>
            <origin xyz="0 0 0" rpy="1.57 0 1.57"/>
            <geometry>
                <box size="0.025 0.025 0.025"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.025 0.025 0.025"/>
            </geometry>
        </collision>
    </link>

    <joint name="camera_rgb_joint" type="fixed">
        <origin xyz="${r200_cam_rgb_px} ${r200_cam_rgb_py} ${r200_cam_rgb_pz}" rpy="0 1.05 0"/>
        <parent link="camera_link"/>
        <child link="camera_rgb_frame"/>
    </joint>
    <link name="camera_rgb_frame"/>

    <joint name="camera_rgb_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
        <parent link="camera_rgb_frame"/>
        <child link="camera_rgb_optical_frame"/>
    </joint>
    <link name="camera_rgb_optical_frame"/>

    <joint name="camera_depth_joint" type="fixed">
        <origin xyz="${r200_cam_rgb_px} ${r200_cam_rgb_py + r200_cam_depth_offset} ${r200_cam_rgb_pz}" rpy="0 0 0"/>
        <parent link="camera_link"/>
        <child link="camera_depth_frame"/>
    </joint>
    <link name="camera_depth_frame"/>

    <joint name="camera_depth_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
        <parent link="camera_depth_frame"/>
        <child link="camera_depth_optical_frame"/>
    </joint>
    <link name="camera_depth_optical_frame"/>

    <joint name="camera_joint_2" type="fixed">
        <parent link="base_link"/>
        <child link="camera_link_2"/>
        <origin xyz="0.179 0 0.05" rpy="0 0.03 0"/> <!-- Adjusted rpy to face the ground -->
    </joint>
    <link name="camera_link_2">
        <visual>
            <origin xyz="0 0 0" rpy="1.57 0 1.57"/>
            <geometry>
                <box size="0.025 0.025 0.025"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.025 0.025 0.025"/>
            </geometry>
        </collision>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="0.0 0 0.068" rpy="0 0 0"/>
    </joint>
    <link name="imu_link"/>

    <joint name="scan_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_scan"/>
        <origin xyz="0.158 0 0.1755" rpy="0 0 0"/>
    </joint>
    <link name="base_scan">
        <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <mesh filename="package://turtlebot3_description/meshes/sensors/lds.stl" scale="0.0005 0.0005 0.0005"/>
        </geometry>
        <material name="dark"/>
        </visual>

        <collision>
            <origin xyz="0.006 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="0.0215" radius="0.025"/>
            </geometry>
        </collision>

        <inertial>
        <mass value="0.114" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                iyy="0.001" iyz="0.0"
                izz="0.001" />
        </inertial>
    </link>


    <!-- Gazebo sensor plugin for the second camera -->
    <gazebo reference="camera_link_2">
        <sensor name="camera_sensor_2" type="camera">
        <update_rate>30</update_rate>
        <camera>
            <horizontal_fov>0.8</horizontal_fov>
            <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
            </image>
            <clip>
            <near>0.1</near>
            <far>100</far>
            </clip>
        </camera>
        <plugin name="camera_controller_2" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>30</updateRate>
            <cameraName>camera_2</cameraName>
            <imageTopicName>camera_2/image_raw</imageTopicName>
            <cameraInfoTopicName>camera_2/camera_info</cameraInfoTopicName>
            <frameName>camera_link_2</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
        </sensor>
    </gazebo>
</robot>

